import asyncio
import logging
import sys
import traceback


# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

try:
    from aiogram import Bot, Dispatcher
    from aiogram.client.default import DefaultBotProperties
    from aiogram.enums import ParseMode
    from aiogram.types import Message
    from aiogram.filters import Command
    
    from src.config.settings import settings
    
except Exception as e:
    traceback.print_exc()
    sys.exit(1)

try:
    from src.database.connection import init_db, AsyncSessionLocal
    from src.middlewares.auth import AdminMiddleware, DatabaseSessionMiddleware
    from src.handlers.common import router as common_router
    from src.handlers.catalog import router as catalog_router
    from src.handlers.search import router as search_router
    from src.keyboards.user import get_main_menu_keyboard
    from src.core.utils import esc
    
    
except Exception as e:
    traceback.print_exc()
    sys.exit(1)

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    
    try:
        # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
        bot = Bot(
            token=settings.bot_token,
            default=DefaultBotProperties(parse_mode=ParseMode.HTML)
        )
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Å–ø–µ—Ç—á–µ—Ä
        dp = Dispatcher()
        
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º middleware
        dp.message.middleware(AdminMiddleware())
        dp.callback_query.middleware(AdminMiddleware())
        dp.message.middleware(DatabaseSessionMiddleware())
        dp.callback_query.middleware(DatabaseSessionMiddleware())
        
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        dp.include_router(common_router)
        dp.include_router(catalog_router)
        dp.include_router(search_router)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π
        
        @dp.message(Command('help'))
        async def cmd_help(message: Message):
            """–ü–æ–º–æ—â—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º"""
            help_text = (
                "<b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n"
                "/start - –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞\n"
                "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
            )
            await message.answer(help_text, reply_markup=get_main_menu_keyboard())
        
        
        
        # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω-—Ñ—É–Ω–∫—Ü–∏–π
        @dp.message(Command('admin'))
        async def cmd_admin(message: Message, is_admin: bool = False):
            """–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å (–¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è)"""
            if not is_admin:
                await message.answer(
                    "‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n"
                    f"–í–∞—à ID: {message.from_user.id}\n"
                    f"–ê–¥–º–∏–Ω—ã: {settings.admin_ids}",
                    reply_markup=get_main_menu_keyboard()
                )
                return
            
            admin_text = (
                "üëë <b>–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å</b>\n\n"
                "üîß <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:</b>\n"
                "‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞–º–∏\n"
                "‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ/—É–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π\n"
                "‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤\n"
                "‚Ä¢ –ú–æ–¥–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞\n"
                "‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã\n\n"
                "‚ö†Ô∏è <i>–§—É–Ω–∫—Ü–∏–∏ –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ</i>"
            )
            
            await message.answer(admin_text, reply_markup=get_main_menu_keyboard())
        
        logger.info("üóÑÔ∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
        try:
            await init_db()
            logger.info("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞")
        except Exception as db_error:
            logger.warning(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ë–î (–ø—Ä–æ–¥–æ–ª–∂–∞–µ–º —Ä–∞–±–æ—Ç—É): {db_error}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram
        logger.info("üîÑ –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram...")
        bot_info = await bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω: @{bot_info.username} ({bot_info.first_name})")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º –æ –∑–∞–ø—É—Å–∫–µ
        if settings.admin_ids:
            for admin_id in settings.admin_ids:
                try:
                    await bot.send_message(
                        admin_id,
                        "–ë–æ—Ç –∑–∞–ø—É—Å—Ç–∏–ª—Å—è‚ö†Ô∏è"
                    )
                except Exception:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–¥–º–∏–Ω–∞–º
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º polling
        logger.info("üèÉ –ù–∞—á–∏–Ω–∞–µ–º polling...")
        logger.info("=" * 50)
        logger.info("ü§ñ –ë–û–¢ –ì–û–¢–û–í –ö –†–ê–ë–û–¢–ï!")
        logger.info("üì± –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:")
        logger.info("   /start - –ó–∞–ø—É—Å–∫")
        logger.info("   /help - –°–ø—Ä–∞–≤–∫–∞")
        logger.info("   /status - –°—Ç–∞—Ç—É—Å")
        logger.info("   /categories - –ö–∞—Ç–µ–≥–æ—Ä–∏–∏")
        logger.info("   /search [–∑–∞–ø—Ä–æ—Å] - –ü–æ–∏—Å–∫")
        logger.info("   /admin - –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
        logger.info("üí¨ –¢–∞–∫–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∏—Å–∫ –ø–æ —Ç–µ–∫—Å—Ç—É —Å–æ–æ–±—â–µ–Ω–∏–π")
        logger.info("=" * 50)
        
        await dp.start_polling(bot, skip_updates=True)
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ: {e}")
        traceback.print_exc()
    finally:
        try:
            await bot.session.close()
            logger.info("üõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        except:
            pass

if __name__ == '__main__':
    try:
        print("üéØ –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏...")
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º (Ctrl+C)")
    except Exception as e:
        print(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        traceback.print_exc()
    finally:
        print("üëã –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã...")