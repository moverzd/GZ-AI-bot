import asyncio
import datetime
import logging

from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode
from aiogram.types import Message
from aiogram.filters import Command

from src.config.settings import settings
from src.database.connection import init_db, AsyncSessionLocal
from src.middlewares.auth import AdminMiddleware, DatabaseSessionMiddleware
from src.handlers.common import router as common_router
from src.handlers.catalog import router as catalog_router
from src.handlers.search import router as search_router
from src.handlers.admin import router as admin_router
from src.handlers.edit import router as edit_router
from src.handlers.upload_content import router as upload_content_router
from src.handlers.upload_main_image import router as upload_main_image_router
from src.handlers.delete_files import router as delete_files_router
from src.keyboards.user import get_main_menu_keyboard
from aiogram import Bot, Dispatcher

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–æ–≤—ã–µ —Å–µ—Ä–≤–∏—Å—ã
from src.services.embeddings.embedding_service import EmbeddingService
from src.services.embeddings.sync_service import initialize_sync_service

"""
bot.py:
–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—ã—á–Ω—ã–π –∏ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö, –∑–∞–ø—É—Å–∫ –±–æ—Ç–∞, 
handlers: 
help - –≤—Å–µ –∫–æ–º–∞–Ω–¥—ã
admin - –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞

—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∞–º —á—Ç–æ –±–æ—Ç –ø–æ–¥–Ω—è–ª—Å—è
"""

debug_format = '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
logging.basicConfig(level = logging.INFO, format = debug_format)
logger = logging.getLogger(__name__)

# –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
embedding_service = EmbeddingService()

async def main():

    logger.info("–ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞")
    bot = Bot(
        token=settings.bot_token,
        default=DefaultBotProperties(parse_mode=ParseMode.HTML)
    )

    # —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç Dispatcher, –∫–æ—Ç–æ—Ä—ã–π –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤       
    dp = Dispatcher()
    

    # middleware - –ø—Ä–æ–º–µ–∂—É—Ç–æ—á–Ω—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –¥–æ —Ç–æ–≥–æ, –∫–∞–∫ –∑–∞–ø—Ä–æ—Å –±—É–¥–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω handler'–æ–º
    # –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ aiogram - –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –∏–∑–º–µ–Ω—è—Ç—å, –¥–æ–±–∞–≤–ª—è—Ç—å, –ø—Ä–æ–≤–µ—Ä—è—Ç—å –¥–∞–Ω–Ω—ã–µ –∫ –∫–∞–∂–¥–æ–º—É –∞–ø–¥–µ–π—Ç—É

    # —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —é–∑–µ—Ä –∞–¥–º–∏–Ω–æ–º? if true –¥–æ–±–∞–≤–ª—è–µ–º is_admin = True –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    dp.message.middleware(AdminMiddleware())  # –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    dp.callback_query.middleware(AdminMiddleware()) # –¥–ª—è inline –∫–Ω–æ–ø–æ–∫

    # —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–¥, –∫–∞–∂–¥—ã–π —Ä–∞–∑ —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Å–µ—Å—Å–∏—é —Å –±–¥ –∏ –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –µ–µ –ø–æ—Å–ª–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∑–∞–ø—Ä–æ—Å–∞
    dp.message.middleware(DatabaseSessionMiddleware()) 
    dp.callback_query.middleware(DatabaseSessionMiddleware())

    # –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤(–≥—Ä—É–ø–ø–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤) –∫ dispatcher        
    dp.include_router(catalog_router) # –ª–æ–≥–∏–∫–∞ –∫–∞—Ç–∞–ª–æ–≥–∞
    dp.include_router(search_router) # –ø–æ–∏—Å–∫–æ–≤–∏–∫
    dp.include_router(admin_router) # –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å
    dp.include_router(edit_router) # —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
    dp.include_router(upload_content_router) # –∑–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
    dp.include_router(upload_main_image_router) # –∑–∞–≥—Ä—É–∑–∫–∞ –≥–ª–∞–≤–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    dp.include_router(delete_files_router) # —É–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤
    dp.include_router(common_router) # NOTE: –í–°–ï–ì–î–ê –í –ö–û–ù–¶–ï
        
    @dp.message(Command('admin'))
    # Message - –∫–ª–∞—Å—Å —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—á–µ–Ω—å –º–Ω–æ–≥–æ –ø–æ–ª–µ–π —É –Ω–µ–≥–æ
    async def cmd_admin(message: Message, is_admin: bool = False):
        if not is_admin:
            await message.answer(
                "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.\n"
                f"–í–∞—à ID: {message.from_user.id if message.from_user else 'Unknown'}\n",
                reply_markup=get_main_menu_keyboard() # –ø–æ—è–≤–ª–µ–Ω–∏–µ –º–µ–Ω—é –¥–ª—è –æ–±—ã—á–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            )
            return
        
        from src.keyboards.admin import get_admin_main_menu_keyboard
        
        admin_text = (
            '<b>üõ†Ô∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</b>\n\n'
            '–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:'
        )

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∞–¥–º–∏–Ω —Ç–µ–∫—Å—Ç –∏ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å
        await message.answer(admin_text, reply_markup=get_admin_main_menu_keyboard(), parse_mode='HTML')
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞–º–∏
    await init_db()
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤–µ–∫—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫ —Å –Ω–æ–≤–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–æ–π
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤
        await embedding_service.initialize()
        logger.info("‚úÖ –°–µ—Ä–≤–∏—Å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        initialize_sync_service(embedding_service)
        logger.info("‚úÖ –°–µ—Ä–≤–∏—Å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏ –≤—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        stats = await embedding_service.get_statistics()
        logger.info(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –ë–î: {stats}")
        
        # –û–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –≤—Å–µ —ç–º–±–µ–¥–¥–∏–Ω–≥–∏ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ
        # from src.services.embeddings.sync_service import EmbeddingSyncService
        # sync_service = EmbeddingSyncService(embedding_service)
        # await sync_service.sync_all_embeddings()
        # logger.info("‚úÖ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    except Exception as e:
        logger.error(f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –≤–µ–∫—Ç–æ—Ä–Ω—ã–π –ø–æ–∏—Å–∫: {e}")
        logger.warning("‚ö†Ô∏è –ë–æ—Ç –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–æ–ª—å–∫–æ —Å –ª–µ–∫—Å–∏—á–µ—Å–∫–∏–º –ø–æ–∏—Å–∫–æ–º")
    
    # –î–µ–ª–∞–µ–º —Å–µ—Ä–≤–∏—Å —ç–º–±–µ–¥–¥–∏–Ω–≥–æ–≤ –¥–æ—Å—Ç—É–ø–Ω—ã–º –≥–ª–æ–±–∞–ª—å–Ω–æ –¥–ª—è handlers
    # –í–º–µ—Å—Ç–æ bot['embedding_service'] –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–æ–¥—É–ª—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è
    import src.handlers.search as search_handler
    search_handler.embedding_service = embedding_service
        
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∞–º –æ –∑–∞–ø—É—Å–∫–µ
    if settings.admin_ids:
        for admin_id in settings.admin_ids:
            try:
                now = datetime.datetime.now().strftime('%Y-%m-%d %H:%M:%S')
                await bot.send_message(
                    admin_id,
                    f"üõ†Ô∏è –ë–æ—Ç –æ–Ω–ª–∞–π–Ω! {now}"
                )
            except Exception:
                pass 
        
    
    await dp.start_polling(bot, skip_updates = True) # –Ω–µ –æ—Ç–≤–µ—á–∞–µ–º –Ω–∞ –æ–∂–∏–¥–∞—é—â–∏–µ –æ—Ç–≤–µ—Ç–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
        

if __name__ == '__main__':
    asyncio.run(main())