from aiogram import Router, types
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from src.keyboards.user import get_main_menu_keyboard
from src.handlers.states import SearchProduct

"""
–°–æ–¥–µ—Ä–∂–∏—Ç –±–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –∏ –Ω–∞–≤–∏–≥–∞—Ü—é –ø–æ –±–æ—Ç—É:
- /start
- –≤–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
- –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –º–µ–Ω—é
- –≤–æ–∑–º–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
- –º–µ–Ω—é –ø–æ–∏—Å–∫–∞
- –±–∞–∑–æ–≤—ã–π –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫
"""


router = Router()

@router.message(Command('start'))
async def cmd_start(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    await state.clear() # –æ—á–∏—Å—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è FSM
    await message.answer(
        '<b>–ì–∞–∑–ø—Ä–æ–º–Ω–µ—Ñ—Ç—å - –ë–∏—Ç—É–º–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã </b>\n' \
        '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º –ø—Ä–æ–¥—É–∫—Ü–∏–∏',
        reply_markup=get_main_menu_keyboard(), parse_mode= 'HTML'
    )

@router.message(Command('help'))
async def cmd_help(message: types.Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞"""
    await state.clear()
    await message.answer(
        '<b>üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n'
        '<b>üë§ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n\n'
        'üîç –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n'
        '‚Ä¢ –£–º–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
        'üìÇ –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n'
        '‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—è–º –∏–ª–∏ —Å—Ñ–µ—Ä–∞–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è\n'
        '‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö\n'
        '‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n'
        'ü§ñ AI-–ø–æ–º–æ—â–Ω–∏–∫\n'
        '‚Ä¢ –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n'
        '‚Ä¢ –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n'
        'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã\n'
        '‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏\n'
        '‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–≤—è–∑–∏\n\n'
        '<b>üõ†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:</b>\n\n'
        'üì¶–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π\n'
        '‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
        '‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫\n'
        '‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
        '‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞\n\n'
        'üìé –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏\n'
        '‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n'
        '‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
        '‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤\n\n'
        '<b>üí° –ö–æ–º–∞–Ω–¥—ã:</b>\n'
        '/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n'
        '/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n'
        '/admin - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
        reply_markup=get_main_menu_keyboard(),
        parse_mode='HTML'
    )

@router.callback_query(lambda c: c.data == 'menu:main')
async def main_menu(callback: types.CallbackQuery, state: FSMContext):
    """–í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await state.clear()
    if callback.message and isinstance(callback.message, Message):
        # –í—Å–µ–≥–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await callback.message.answer(
            '<b>üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
            reply_markup=get_main_menu_keyboard(),
            parse_mode='HTML'
        )
    await callback.answer()

@router.callback_query(lambda c: c.data == 'menu:contact')
async def contact(callback: types.CallbackQuery):
    """–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è"""
    if callback.message and isinstance(callback.message, Message):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await callback.message.answer(
            '<b>–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>\n'
            '"–û–û–û –ì–∞–∑–ø—Ä–æ–º–Ω–µ—Ñ—Ç—å-–ë–ú"\n'
            '<b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> +7 (812) 493-25-66\n'
            '<b>–ê–¥—Ä–µ—Å:</b> –ë–æ–ª—å—à–æ–π –ø—Ä. –í.–û. –¥. 80, –ª–∏—Ç. –†3-5, –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥, –†–æ—Å—Å–∏—è, 199178 \n'
            '<b>Email:</b> Brit@gazprom-neft.ru\n'
            '<b>–°–∞–π—Ç:</b> https://www.gazprom-neft.ru',
            reply_markup=types.InlineKeyboardMarkup(inline_keyboard=[[
                types.InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                    callback_data="menu:main"
                )
            ]]),
            parse_mode='HTML'
        )
    await callback.answer()

@router.callback_query(lambda c: c.data == 'menu:features')
async def features(callback: types.CallbackQuery):
    """–û–ø–∏—Å–∞–Ω–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –±–æ—Ç–∞"""
    if callback.message and isinstance(callback.message, Message):
        try:
            await callback.message.answer(
            '<b>üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n'
            '<b>üë§ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n\n'
            'üîç –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n'
            '‚Ä¢ –£–º–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
            'üìÇ –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n'
            '‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—è–º –∏–ª–∏ —Å—Ñ–µ—Ä–∞–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è\n'
            '‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö\n'
            '‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n'
            'ü§ñ AI-–ø–æ–º–æ—â–Ω–∏–∫\n'
            '‚Ä¢ –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n'
            '‚Ä¢ –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n'
            'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã\n'
            '‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏\n'
            '‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–≤—è–∑–∏\n\n'
            '<b>üõ†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:</b>\n\n'
            'üì¶–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π\n'
            '‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
            '‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫\n'
            '‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
            '‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞\n\n'
            'üìé –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏\n'
            '‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n'
            '‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
            '‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤\n\n'
            '<b>üí° –ö–æ–º–∞–Ω–¥—ã:</b>\n'
            '/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n'
            '/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n'
            '/admin - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
            reply_markup=get_main_menu_keyboard(),
            parse_mode='HTML'
        )
        except Exception:
            # –í —Å–ª—É—á–∞–µ –æ—à–∏–±–∫–∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await callback.message.answer(
            '<b>üìñ –°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n'
            '<b>üë§ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:</b>\n\n'
            'üîç –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n'
            '‚Ä¢ –£–º–Ω—ã–π –ø–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—è–º –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
            'üìÇ –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n'
            '‚Ä¢ –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–∞—Ç–µ–≥–æ—Ä—è–º –∏–ª–∏ —Å—Ñ–µ—Ä–∞–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è\n'
            '‚Ä¢ –ü–æ–¥—Ä–æ–±–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–æ–¥—É–∫—Ç–∞—Ö\n'
            '‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n'
            'ü§ñ AI-–ø–æ–º–æ—â–Ω–∏–∫\n'
            '‚Ä¢ –û—Ç–≤–µ—Ç—ã –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã –æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏\n'
            '‚Ä¢ –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n'
            'üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã\n'
            '‚Ä¢ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–ø–∞–Ω–∏–∏\n'
            '‚Ä¢ –ö–æ–Ω—Ç–∞–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–≤—è–∑–∏\n\n'
            '<b>üõ†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤:</b>\n\n'
            'üì¶–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ü–∏–µ–π\n'
            '‚Ä¢ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
            '‚Ä¢ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫\n'
            '‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
            '‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ–≥–æ –∫–∞—Ç–∞–ª–æ–≥–∞\n\n'
            'üìé –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞–º–∏\n'
            '‚Ä¢ –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤\n'
            '‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤\n'
            '‚Ä¢ –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤\n\n'
            '<b>üí° –ö–æ–º–∞–Ω–¥—ã:</b>\n'
            '/start - –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n'
            '/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n'
            '/admin - –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞',
            reply_markup=get_main_menu_keyboard(),
            parse_mode = 'HTML'
        )
            return
    await callback.answer()

@router.callback_query(lambda c: c.data == 'menu:search')
async def search_menu(callback: types.CallbackQuery, state: FSMContext):
    """–ú–µ–Ω—é –ø–æ–∏—Å–∫–∞"""
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –ø–æ–∏—Å–∫–æ–≤–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞
    await state.set_state(SearchProduct.waiting_query)
    
    if callback.message and isinstance(callback.message, Message):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await callback.message.answer(
            '<b>üîç –ü–æ–∏—Å–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤</b>\n\n'
            '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∞ –∏–ª–∏ –µ–≥–æ —á–∞—Å—Ç—å –¥–ª—è –ø–æ–∏—Å–∫–∞:',
            reply_markup=types.InlineKeyboardMarkup(inline_keyboard=[[
                types.InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                    callback_data="menu:main"
                )
            ]]),
            parse_mode='HTML'
        )
    await callback.answer()

@router.callback_query(lambda c: c.data == 'menu:question')
async def ai_question_menu(callback: types.CallbackQuery, state: FSMContext):
    """–ú–µ–Ω—é –¥–ª—è –≤–æ–ø—Ä–æ—Å–æ–≤ –∫ AI"""
    from src.handlers.states import AskAI
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –≤–æ–ø—Ä–æ—Å–∞ –¥–ª—è AI
    await state.set_state(AskAI.waiting_question)
    if callback.message and isinstance(callback.message, Message):
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–º–µ—Å—Ç–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ
        await callback.message.answer(
            '<b>ü§ñ –°–ø—Ä–æ—Å–∏—Ç—å —É AI</b>\n\n'
            '–ó–∞–¥–∞–π—Ç–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤–æ–ø—Ä–æ—Å –æ –ø—Ä–æ–¥—É–∫—Ü–∏–∏ –ì–∞–∑–ø—Ä–æ–º–Ω–µ—Ñ—Ç—å-–ë–∏—Ç—É–º–Ω—ã–µ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã. '
            '–ò–ò –ø—Ä–æ–≤–µ—Ä–∏—Ç –±–∞–∑—É –∑–Ω–∞–Ω–∏–π –∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–º –æ—Ç–≤–µ—Ç, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏.\n\n'
            '<i>–ü—Ä–∏–º–µ—á–∞–Ω–∏–µ:</i>\n'
            '–û—Ç–≤–µ—Ç—ã –æ—Å–Ω–æ–≤—ã–≤–∞—é—Ç—Å—è –Ω–∞ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π, –∞–±—Å–æ–ª—é—Ç–Ω–∞—è —Ç–æ—á–Ω–æ—Å—Ç—å –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞. –ï—Å–ª–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ, –ò–ò –ø—Ä–µ–¥–ª–æ–∂–∏—Ç —É—Ç–æ—á–Ω–∏—Ç—å –∑–∞–ø—Ä–æ—Å.\n',
            reply_markup=types.InlineKeyboardMarkup(inline_keyboard=[[
                types.InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
                    callback_data="menu:main"
                )
            ]]),
            parse_mode='HTML'
        )
    await callback.answer()


# NOTE: –í–°–ï–ì–î–ê –í –ö–û–ù–¶–ï –§–ê–ô–õ–ê –ò–ù–ê–ß–ï –ë–£–î–ï–¢ –ö–û–ù–¢–ï–ö–°–¢ –ù–ê–†–£–®–ê–¢–¨–°–Ø
@router.message(lambda message: message.text and not message.text.startswith('/'))
async def context_handler_outer_context(message: types.Message, state: FSMContext):
    """
    –ë–∞–∑–æ–≤—ã–π –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—á–∏–∫ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –≤–Ω–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
    –°—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏:
    1. –≠—Ç–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    2. –ù–µ –∫–æ–º–∞–Ω–¥–∞ (–Ω–µ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å /)
    3. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ FSM —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    """
    current_state = await state.get_state()
    if current_state is not None:
        return  
    
    await message.answer(
        "–ó–∞–ø—Ä–æ—Å –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è—Ö –±–æ—Ç–∞, –≤–æ—Å–ø–æ–ª—å–∑—É–π—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π /help",
        reply_markup=types.InlineKeyboardMarkup(inline_keyboard=[
            [
                types.InlineKeyboardButton(text="üîç –ü–æ–∏—Å–∫", callback_data="menu:search"),
                types.InlineKeyboardButton(text="üìÇ –ö–∞—Ç–∞–ª–æ–≥", callback_data="catalog:categories")
            ],
            [
                types.InlineKeyboardButton(text="üè† –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="menu:main")
            ]
        ])
    )